/* Generated by re2c 1.3 on Thu Nov  9 08:28:11 2023 */
#line 1 "hammer_fgd.y"
%language "c++"

%define api.parser.class {HammerFGDParser}
%define api.token.constructor
%define api.value.type variant
%define parse.assert
%define parse.error verbose

%param { GoldSource::HammerFGDFile* ctx }//%param

%code requires
{
	

#include "..\application.h"
#include "..\common.h"
#include "..\hammer_fgd.h"

GoldSource::FGDTokenTypes yylex(GoldSource::HammerFGDFile* ctx);

}

%token	SolidClass "@SolidClass" BaseClass "@BaseClass" PointClass "@PointClass" 
%token  EqualsSign "=" Colon ":" StringLiteral Identifier Number BaseDef "base"
%token  OpeningParenthesis "(" ClosingParenthesis ")" OpeningBracket "[" ClosingBracket "]"  
%token SizeBoundingBox "size" Iconsprite "iconsprite" Color "color"
%token IntegerType "integer" Color255 "color255" String "string" Sprite "sprite" Studio "studio" Flags "flags" Choices "choices" 
%token EndOfFile

%%

// Общее описание файла
FGDFile: classes;

// Описание классов
classes:  /* empty */
|SolidClassDef
|PointClassDef
|BaseClassDef;


// Брашевая энтити
SolidClassDef: SolidClass BasesClassesOpt EqualsSign Identifier Colon StringLiteral OpeningBracket ClassFieldsOpt ClosingBracket;

BasesClassesOpt:  /* empty */
|BaseDef OpeningBracket identifierListOpt ClosingBracket;

// Точечная энтити
PointClassDef: PointClass  PointEntityConstructorListOpt EqualsSign Identifier Colon StringLiteral OpeningBracket ClassFieldsOpt ClosingBracket;

// Базовый класс
BaseClassDef: BaseClass EqualsSign OpeningBracket ClassFieldsOpt ClosingBracket;

// Параметры точечных энтиткй:

PointEntityConstructorListOpt: /* empty */
| PointEntityConstructorListOpt PointEntityConstructor;

// Обобщенные параметры точечных энтити
PointEntityConstructor: IconspriteDefOpt
| StudioDefOpt
| BoundingBoxDefOpt
| ColorDefOpt;

// Цвет
ColorDefOpt: Color OpeningParenthesis Number Number Number ClosingParenthesis

// ББокс
BoundingBoxDefOpt: SizeBoundingBox OpeningParenthesis Number Number Number ',' Number Number Number ClosingParenthesis

// Модель
StudioDefOpt: Studio OpeningParenthesis StringLiteral ClosingParenthesis

// Спрайт
IconspriteDefOpt: Iconsprite OpeningParenthesis StringLiteral ClosingParenthesis


identifierListOpt: /* empty */
|identifierList;

identifierList: identifierList ',' Identifier
|				Identifier;

// Список свойств энтити
ClassFieldsOpt: /* empty */
| ClassFieldDef;

// Описание свойства энтити
ClassFieldDef: 
// Обычные поля
Identifier OpeningBracket TypeId ClosingBracket Colon StringLiteral Colon DefaultValueOpt; 
// Флаги
| Identifier OpeningBracket Flags ClosingBracket EqualsSign OpeningBracket FlagsValues ClosingBracket
// Перечисление
| Identifier OpeningBracket Choices ClosingBracket Colon StringLiteral Colon Number EqualsSign OpeningBracket EnumValues ClosingBracket


// Значения флагов
FlagsValues: /* empty */
| Number Colon StringLiteral;

// Значения перечислений
EnumValues: /* empty */
| Number Colon StringLiteral;

// Типы свойств энтити
TypeId: IntegerType
| Color255
| String
| Sprite
| Studio;


// Значение по умолчанию для энтити
DefaultValueOpt: /**/
|StringLiteral;

%%


GoldSource::FGDTokenTypes yylex(GoldSource::HammerFGDFile* ctx)
{
    char* s = ctx->ParserCursor();

    
#line 129 "<stdout>"
{
	char yych;
	yych = *s;
	switch (yych) {
	case 0x00:	goto yy3;
	case '"':	goto yy5;
	case '(':	goto yy6;
	case ')':	goto yy8;
	case '0':
	case '1':
	case '2':
	case '3':
	case '4':
	case '5':
	case '6':
	case '7':
	case '8':
	case '9':	goto yy10;
	case ':':	goto yy13;
	case '=':	goto yy15;
	case '@':	goto yy17;
	case 'A':
	case 'B':
	case 'C':
	case 'D':
	case 'E':
	case 'F':
	case 'G':
	case 'H':
	case 'I':
	case 'J':
	case 'K':
	case 'L':
	case 'M':
	case 'N':
	case 'O':
	case 'P':
	case 'Q':
	case 'R':
	case 'S':
	case 'T':
	case 'U':
	case 'V':
	case 'W':
	case 'X':
	case 'Y':
	case 'Z':
	case '_':
	case 'a':
	case 'b':
	case 'c':
	case 'd':
	case 'e':
	case 'f':
	case 'g':
	case 'h':
	case 'i':
	case 'j':
	case 'k':
	case 'l':
	case 'm':
	case 'n':
	case 'o':
	case 'p':
	case 'q':
	case 'r':
	case 's':
	case 't':
	case 'u':
	case 'v':
	case 'w':
	case 'x':
	case 'y':
	case 'z':	goto yy18;
	case '[':	goto yy21;
	case '\\':	goto yy23;
	case ']':	goto yy26;
	default:	goto yy2;
	}
yy2:
yy3:
	++s;
#line 158 "hammer_fgd.y"
	{
            return GoldSource::FGDTokenTypes::EndOfFile;
        }
#line 216 "<stdout>"
yy5:
	yych = *++s;
	switch (yych) {
	case '.':	goto yy28;
	default:	goto yy2;
	}
yy6:
	++s;
#line 171 "hammer_fgd.y"
	{ return  GoldSource::FGDTokenTypes::OpeningParenthesis; }
#line 227 "<stdout>"
yy8:
	++s;
#line 172 "hammer_fgd.y"
	{ return  GoldSource::FGDTokenTypes::ClosingParenthesis; }
#line 232 "<stdout>"
yy10:
	yych = *++s;
	switch (yych) {
	case '0':
	case '1':
	case '2':
	case '3':
	case '4':
	case '5':
	case '6':
	case '7':
	case '8':
	case '9':	goto yy10;
	default:	goto yy12;
	}
yy12:
#line 170 "hammer_fgd.y"
	{ return  GoldSource::FGDTokenTypes::Number; }
#line 251 "<stdout>"
yy13:
	++s;
#line 167 "hammer_fgd.y"
	{ return  GoldSource::FGDTokenTypes::Colon; }
#line 256 "<stdout>"
yy15:
	++s;
#line 166 "hammer_fgd.y"
	{ return  GoldSource::FGDTokenTypes::EqualsSign; }
#line 261 "<stdout>"
yy17:
	yych = *++s;
	switch (yych) {
	case 'B':	goto yy29;
	case 'P':	goto yy30;
	case 'S':	goto yy31;
	default:	goto yy2;
	}
yy18:
	yych = *++s;
	switch (yych) {
	case '0':
	case '1':
	case '2':
	case '3':
	case '4':
	case '5':
	case '6':
	case '7':
	case '8':
	case '9':	goto yy32;
	case 'A':
	case 'B':
	case 'C':
	case 'D':
	case 'E':
	case 'F':
	case 'G':
	case 'H':
	case 'I':
	case 'J':
	case 'K':
	case 'L':
	case 'M':
	case 'N':
	case 'O':
	case 'P':
	case 'Q':
	case 'R':
	case 'S':
	case 'T':
	case 'U':
	case 'V':
	case 'W':
	case 'X':
	case 'Y':
	case 'Z':
	case '_':
	case 'a':
	case 'b':
	case 'c':
	case 'd':
	case 'e':
	case 'f':
	case 'g':
	case 'h':
	case 'i':
	case 'j':
	case 'k':
	case 'l':
	case 'm':
	case 'n':
	case 'o':
	case 'p':
	case 'q':
	case 'r':
	case 's':
	case 't':
	case 'u':
	case 'v':
	case 'w':
	case 'x':
	case 'y':
	case 'z':	goto yy18;
	default:	goto yy20;
	}
yy20:
#line 169 "hammer_fgd.y"
	{ return  GoldSource::FGDTokenTypes::Identifier; }
#line 341 "<stdout>"
yy21:
	++s;
#line 173 "hammer_fgd.y"
	{ return  GoldSource::FGDTokenTypes::OpeningBracket; }
#line 346 "<stdout>"
yy23:
	yych = *++s;
	switch (yych) {
	case '\n':	goto yy25;
	default:	goto yy23;
	}
yy25:
#line 175 "hammer_fgd.y"
	{ return  GoldSource::FGDTokenTypes::Comment; }
#line 356 "<stdout>"
yy26:
	++s;
#line 174 "hammer_fgd.y"
	{ return  GoldSource::FGDTokenTypes::ClosingBracket; }
#line 361 "<stdout>"
yy28:
	yych = *++s;
	switch (yych) {
	case '*':	goto yy34;
	default:	goto yy2;
	}
yy29:
	yych = *++s;
	switch (yych) {
	case 'a':	goto yy35;
	default:	goto yy2;
	}
yy30:
	yych = *++s;
	switch (yych) {
	case 'o':	goto yy36;
	default:	goto yy2;
	}
yy31:
	yych = *++s;
	switch (yych) {
	case 'o':	goto yy37;
	default:	goto yy2;
	}
yy32:
	yych = *++s;
	switch (yych) {
	case '0':
	case '1':
	case '2':
	case '3':
	case '4':
	case '5':
	case '6':
	case '7':
	case '8':
	case '9':	goto yy32;
	case 'A':
	case 'B':
	case 'C':
	case 'D':
	case 'E':
	case 'F':
	case 'G':
	case 'H':
	case 'I':
	case 'J':
	case 'K':
	case 'L':
	case 'M':
	case 'N':
	case 'O':
	case 'P':
	case 'Q':
	case 'R':
	case 'S':
	case 'T':
	case 'U':
	case 'V':
	case 'W':
	case 'X':
	case 'Y':
	case 'Z':
	case '_':
	case 'a':
	case 'b':
	case 'c':
	case 'd':
	case 'e':
	case 'f':
	case 'g':
	case 'h':
	case 'i':
	case 'j':
	case 'k':
	case 'l':
	case 'm':
	case 'n':
	case 'o':
	case 'p':
	case 'q':
	case 'r':
	case 's':
	case 't':
	case 'u':
	case 'v':
	case 'w':
	case 'x':
	case 'y':
	case 'z':	goto yy38;
	default:	goto yy20;
	}
yy34:
	yych = *++s;
	switch (yych) {
	case '"':	goto yy40;
	default:	goto yy2;
	}
yy35:
	yych = *++s;
	switch (yych) {
	case 's':	goto yy42;
	default:	goto yy2;
	}
yy36:
	yych = *++s;
	switch (yych) {
	case 'i':	goto yy43;
	default:	goto yy2;
	}
yy37:
	yych = *++s;
	switch (yych) {
	case 'l':	goto yy44;
	default:	goto yy2;
	}
yy38:
	yych = *++s;
	switch (yych) {
	case 'A':
	case 'B':
	case 'C':
	case 'D':
	case 'E':
	case 'F':
	case 'G':
	case 'H':
	case 'I':
	case 'J':
	case 'K':
	case 'L':
	case 'M':
	case 'N':
	case 'O':
	case 'P':
	case 'Q':
	case 'R':
	case 'S':
	case 'T':
	case 'U':
	case 'V':
	case 'W':
	case 'X':
	case 'Y':
	case 'Z':
	case '_':
	case 'a':
	case 'b':
	case 'c':
	case 'd':
	case 'e':
	case 'f':
	case 'g':
	case 'h':
	case 'i':
	case 'j':
	case 'k':
	case 'l':
	case 'm':
	case 'n':
	case 'o':
	case 'p':
	case 'q':
	case 'r':
	case 's':
	case 't':
	case 'u':
	case 'v':
	case 'w':
	case 'x':
	case 'y':
	case 'z':	goto yy38;
	default:	goto yy20;
	}
yy40:
	++s;
#line 168 "hammer_fgd.y"
	{ return  GoldSource::FGDTokenTypes::StringLiteral;}
#line 540 "<stdout>"
yy42:
	yych = *++s;
	switch (yych) {
	case 'e':	goto yy45;
	default:	goto yy2;
	}
yy43:
	yych = *++s;
	switch (yych) {
	case 'n':	goto yy46;
	default:	goto yy2;
	}
yy44:
	yych = *++s;
	switch (yych) {
	case 'i':	goto yy47;
	default:	goto yy2;
	}
yy45:
	yych = *++s;
	switch (yych) {
	case 'C':	goto yy48;
	default:	goto yy2;
	}
yy46:
	yych = *++s;
	switch (yych) {
	case 't':	goto yy49;
	default:	goto yy2;
	}
yy47:
	yych = *++s;
	switch (yych) {
	case 'd':	goto yy50;
	default:	goto yy2;
	}
yy48:
	yych = *++s;
	switch (yych) {
	case 'l':	goto yy51;
	default:	goto yy2;
	}
yy49:
	yych = *++s;
	switch (yych) {
	case 'C':	goto yy52;
	default:	goto yy2;
	}
yy50:
	yych = *++s;
	switch (yych) {
	case 'C':	goto yy53;
	default:	goto yy2;
	}
yy51:
	yych = *++s;
	switch (yych) {
	case 'a':	goto yy54;
	default:	goto yy2;
	}
yy52:
	yych = *++s;
	switch (yych) {
	case 'l':	goto yy55;
	default:	goto yy2;
	}
yy53:
	yych = *++s;
	switch (yych) {
	case 'l':	goto yy56;
	default:	goto yy2;
	}
yy54:
	yych = *++s;
	switch (yych) {
	case 's':	goto yy57;
	default:	goto yy2;
	}
yy55:
	yych = *++s;
	switch (yych) {
	case 'a':	goto yy58;
	default:	goto yy2;
	}
yy56:
	yych = *++s;
	switch (yych) {
	case 'a':	goto yy59;
	default:	goto yy2;
	}
yy57:
	yych = *++s;
	switch (yych) {
	case 's':	goto yy60;
	default:	goto yy2;
	}
yy58:
	yych = *++s;
	switch (yych) {
	case 's':	goto yy62;
	default:	goto yy2;
	}
yy59:
	yych = *++s;
	switch (yych) {
	case 's':	goto yy63;
	default:	goto yy2;
	}
yy60:
	++s;
#line 164 "hammer_fgd.y"
	{ return  GoldSource::FGDTokenTypes::BaseClass; }
#line 653 "<stdout>"
yy62:
	yych = *++s;
	switch (yych) {
	case 's':	goto yy64;
	default:	goto yy2;
	}
yy63:
	yych = *++s;
	switch (yych) {
	case 's':	goto yy66;
	default:	goto yy2;
	}
yy64:
	++s;
#line 165 "hammer_fgd.y"
	{ return  GoldSource::FGDTokenTypes::PointClass; }
#line 670 "<stdout>"
yy66:
	++s;
#line 163 "hammer_fgd.y"
	{ return  GoldSource::FGDTokenTypes::SolidClass; }
#line 675 "<stdout>"
}
#line 190 "hammer_fgd.y"

	
	return GoldSource::FGDTokenTypes::EndOfFile;
}

void yy::HammerFGDParser::error(const std::string& m)
{
    Con_Printf("%s\n",m.c_str());
}






